{"version":3,"sources":["assets/svg/midi-2.svg","assets/svg/midi-3.svg","ItemTypes.ts","FileImg.tsx","Column.tsx","Container.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/svg/empty.svg","assets/svg/midi-1.svg"],"names":["module","exports","ItemTypes","FileImg","name","step","forbidDrag","dragStart","event","url","dataTransfer","setData","effectAllowed","useDrag","item","type","end","monitor","getItem","collect","isDragging","drag","preview","Drag","ref","draggable","onDragStart","preventDefault","onTouchStart","setTimeout","window","location","href","DragPreviewImage","connect","src","midi1","FileCell","isActive","isMove","Img","width","height","alt","empty","midi2","midi3","styled","div","props","calcWidthPercent","span","Col","xs","sm","md","lg","Column","children","Container","memo","useState","id","setForbidDrag","onToggleForbidDrag","index","map","file","Row","ButtonArea","Button","onClick","e","FileArea","App","AppContainer","content","DndProvider","backend","HTML5Backend","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12365622.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/midi-2.041aef94.svg\";","module.exports = __webpack_public_path__ + \"static/media/midi-3.7f4c94f0.svg\";","export const ItemTypes = {\n  File: \"file\",\n};\n","import React, { useMemo } from \"react\";\nimport { useDrag, DragSourceMonitor, DragPreviewImage } from \"react-dnd\";\nimport { ItemTypes } from \"./ItemTypes\";\nimport midi1 from \"./assets/svg/midi-1.svg\";\nimport midi2 from \"./assets/svg/midi-2.svg\";\nimport midi3 from \"./assets/svg/midi-3.svg\";\nimport empty from \"./assets/svg/empty.svg\";\nimport styled from \"styled-components\";\n\nexport interface FileProps {\n  name: string;\n  step: number;\n  forbidDrag: boolean;\n}\n\ninterface FileCellType {\n  isMove: boolean;\n  isActive: boolean;\n}\n\nfunction FileImg({ name, step, forbidDrag }: FileProps) {\n  function dragStart(event: any, url: string) {\n    // var img = new Image();\n    // img.src = midi1;\n\n    // event.dataTransfer.setDragImage(img, 100, 200);\n\n    event.dataTransfer.setData(\"DownloadURL\", url);\n    event.dataTransfer.effectAllowed = \"copyLink\";\n  }\n\n  // const onToggleForbidDrag = useCallback(() => {\n  //   setForbidDrag(!forbidDrag);\n  // }, [forbidDrag]);\n\n  const [{ isDragging }, drag, preview] = useDrag({\n    item: { name, step, type: ItemTypes.File },\n    // canDrag: !forbidDrag,\n    end: (item: { name: string } | undefined, monitor: DragSourceMonitor) => {\n      //   const dropResult = monitor.didDrop();\n      const dropResult = monitor.getItem();\n      //   alert(dropResult);\n    },\n\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  if (step === 1) {\n    return (\n      <Drag\n        ref={drag}\n        draggable\n        onDragStart={(event) => {\n          if (forbidDrag) {\n            dragStart(\n              event,\n              \"text/plain:sample1.mid:https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\"\n            );\n          } else {\n            event.preventDefault();\n          }\n        }}\n        onTouchStart={(event) => {\n          if (forbidDrag) {\n            setTimeout(() => {\n              const response = {\n                file: \"https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\",\n              };\n              window.location.href = response.file;\n            }, 100);\n          }\n        }}\n      >\n        <DragPreviewImage connect={preview} src={midi1} />\n        <FileCell isActive={forbidDrag} isMove={isDragging}>\n          <Img>\n            {forbidDrag ? (\n              <img width=\"32\" height=\"32\" alt=\"drag out\" src={midi1} />\n            ) : (\n              <img width=\"32\" height=\"32\" alt=\"drag out\" src={empty} />\n            )}\n          </Img>\n          {name}\n        </FileCell>\n      </Drag>\n    );\n  } else if (step === 2) {\n    return (\n      <Drag\n        ref={drag}\n        draggable\n        onDragStart={(event) => {\n          if (forbidDrag) {\n            dragStart(\n              event,\n              \"text/plain:sample2.mid:https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\"\n            );\n          } else {\n            event.preventDefault();\n          }\n        }}\n        onTouchStart={(event) => {\n          if (forbidDrag) {\n            setTimeout(() => {\n              const response = {\n                file: \"https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\",\n              };\n              window.location.href = response.file;\n            }, 100);\n          }\n        }}\n      >\n        <DragPreviewImage connect={preview} src={midi2} />\n        <FileCell isActive={forbidDrag} isMove={isDragging}>\n          <Img>\n            {forbidDrag ? (\n              <img width=\"32\" height=\"32\" alt=\"drag out\" src={midi2} />\n            ) : (\n              <img width=\"32\" height=\"32\" alt=\"drag out\" src={empty} />\n            )}\n          </Img>\n          {name}\n        </FileCell>\n      </Drag>\n    );\n  } else {\n    return (\n      <Drag\n        ref={drag}\n        draggable\n        onDragStart={(event) => {\n          if (forbidDrag) {\n            dragStart(\n              event,\n              \"text/plain:sample3.mid:https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\"\n            );\n          } else {\n            event.preventDefault();\n          }\n        }}\n        onTouchStart={(event) => {\n          if (forbidDrag) {\n            setTimeout(() => {\n              const response = {\n                file: \"https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\",\n              };\n              window.location.href = response.file;\n            }, 100);\n          }\n        }}\n      >\n        <DragPreviewImage connect={preview} src={midi3} />\n        <FileCell isActive={forbidDrag} isMove={isDragging}>\n          <Img>\n            {forbidDrag ? (\n              <img width=\"32\" height=\"32\" alt=\"drag out\" src={midi3} />\n            ) : (\n              <img width=\"32\" height=\"32\" alt=\"drag out\" src={empty} />\n            )}\n          </Img>\n          {name}\n        </FileCell>\n      </Drag>\n    );\n  }\n}\n\nexport default FileImg;\n\nconst FileCell = styled.div<FileCellType>`\n  width: 100%;\n  height: 30px;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  opacity: ${(props) => (props.isMove ? 0.4 : 1)};\n  cursor: ${(props) => (props.isActive ? \"grabbing\" : \"default\")};\n\n  &:hover {\n    background-color: rgb(107, 182, 184);\n  }\n`;\n\nconst Drag = styled.div`\n  float: left;\n  width: 100%;\n  padding: 1rem 1rem;\n`;\n\nconst Img = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-right: 10px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface colProps {\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  children: React.ReactNode;\n}\n\nconst calcWidthPercent = (span: number) => {\n  if (!span) return;\n\n  const width = (span / 12) * 100;\n  return width;\n};\n\nconst BREAK_POINT_MOBILE = 768;\nconst BREAK_POINT_TABLET = 992;\nconst BREAK_POINT_PC = 1200;\n\nconst Col = styled.div`\n  float: left;\n  width: ${({ xs }: any) => (xs ? `${calcWidthPercent(xs)}%` : `100%`)};\n  padding: 1rem;\n\n  @media only screen and (min-width: ${BREAK_POINT_MOBILE}px) {\n    width: ${({ sm }: any) => sm && `${calcWidthPercent(sm)}%`};\n  }\n  @media only screen and (min-width: ${BREAK_POINT_TABLET}px) {\n    width: ${({ md }: any) => md && `${calcWidthPercent(md)}%`};\n  }\n  @media only screen and (min-width: ${BREAK_POINT_PC}px) {\n    width: ${({ lg }: any) => lg && `${calcWidthPercent(lg)}%`};\n  }\n`;\n\nconst Column = (props: colProps) => {\n  return <Col {...props}>{props.children}</Col>;\n};\n\nexport default Column;\n","import React, { useState, useEffect, useCallback, memo } from \"react\";\nimport FileImg from \"./FileImg\";\nimport \"./App.scss\";\nimport Column from \"./Column\";\nimport styled from \"styled-components\";\n\nconst Container = memo(function Container() {\n  const [forbidDrag, setForbidDrag] = useState([\n    {\n      id: 0,\n      empty: false,\n    },\n    {\n      id: 1,\n      empty: false,\n    },\n    {\n      id: 2,\n      empty: false,\n    },\n  ]);\n\n  function onToggleForbidDrag(index: number) {\n    setForbidDrag(\n      forbidDrag.map((file) =>\n        file.id === index ? { ...file, empty: !file.empty } : file\n      )\n    );\n  }\n  // const [forbidDrag, setForbidDrag] = useState(false);\n\n  // const onToggleForbidDrag = useCallback(() => {\n  //   setForbidDrag(!forbidDrag);\n  // }, [forbidDrag]);\n\n  // useEffect(() => {\n  //   console.log(\"change state: \", forbidDrag);\n  // }, [forbidDrag]);\n\n  return (\n    <Row>\n      <Column xs={12} sm={3} md={3} lg={3}>\n        <ButtonArea>\n          <Button onClick={(e) => onToggleForbidDrag(0)}>\n            반주 midi 파일 생성\n          </Button>\n          <Button onClick={(e) => onToggleForbidDrag(1)}>\n            보이싱 midi 파일 생성\n          </Button>\n          <Button onClick={(e) => onToggleForbidDrag(2)}>\n            멜로디 midi 파일 생성\n          </Button>\n        </ButtonArea>\n      </Column>\n\n      <Column xs={12} sm={12} md={3} lg={3}>\n        <FileArea>\n          <FileImg name=\"반주\" step={1} forbidDrag={forbidDrag[0].empty} />\n          <FileImg name=\"보이싱\" step={2} forbidDrag={forbidDrag[1].empty} />\n          <FileImg name=\"멜로디\" step={3} forbidDrag={forbidDrag[2].empty} />\n        </FileArea>\n      </Column>\n\n      {/* <Column xs={12} sm={3} md={3} lg={3}>\n        <div style={{ overflow: \"hidden\", clear: \"both\" }}>\n          <FileImg name=\"보이싱\" step={2} />\n        </div>\n      </Column>\n\n      <Column xs={12} sm={3} md={3} lg={3}>\n        <div style={{ overflow: \"hidden\", clear: \"both\" }}>\n          <FileImg name=\"멜로디\" step={3} />\n        </div>\n      </Column> */}\n    </Row>\n  );\n});\n\nexport default Container;\n\nconst Row = styled.div`\n  margin: 20px;\n  &::after {\n    content: \"\";\n    clear: both;\n    display: table;\n  }\n`;\n\nconst ButtonArea = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 200px;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 150px;\n  height: 40px;\n  margin-bottom: 15px;\n  background-color: rgb(107, 182, 184);\n  font-size: 14px;\n  font-family: Arial, Helvetica, sans-serif;\n  color: white;\n  cursor: pointer;\n  border: none;\n  border-radius: 10px;\n  box-shadow: 0 9px rgb(171, 169, 169);\n\n  &:hover {\n    background-color: rgb(43, 79, 81);\n  }\n\n  &:active {\n    background-color: rgb(43, 79, 81);\n    box-shadow: 0 5px rgb(36, 36, 36);\n    transform: translateY(4px);\n  }\n`;\n\nconst FileArea = styled.div`\n  border: 1px dashed gray;\n  float: left;\n  width: 450px;\n  height: 200px;\n  background-color: rgba(0, 0, 0, 0.1);\n`;\n","import React from \"react\";\nimport Container from \"./Container\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  const options = { enableTouchEvents: true, enableMouseEvents: true };\n  return (\n    <AppContainer>\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <DndProvider backend={HTML5Backend}>\n        <Container />\n      </DndProvider>\n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled.div`\n  &,\n  & * {\n    box-sizing: border-box;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/empty.c41f6908.svg\";","module.exports = __webpack_public_path__ + \"static/media/midi-1.e5e05205.svg\";"],"sourceRoot":""}