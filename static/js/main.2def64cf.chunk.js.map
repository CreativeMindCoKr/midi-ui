{"version":3,"sources":["assets/svg/midi-3.svg","ItemTypes.ts","FileImg.tsx","Column.tsx","Container.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/svg/empty.svg","assets/svg/midi-1.svg","assets/svg/midi-2.svg"],"names":["module","exports","ItemTypes","FileImg","name","step","useState","forbidDrag","setForbidDrag","dragStart","event","url","dataTransfer","setData","effectAllowed","onToggleForbidDrag","useCallback","useDrag","item","type","end","monitor","getItem","collect","opacity","isDragging","cursor","drag","preview","ButtonGroup","DragPreviewImage","connect","src","midi1","ButtonArea","Button","onClick","Drag","ref","style","draggable","onDragStart","preventDefault","Img","width","height","alt","empty","midi2","midi3","styled","div","calcWidthPercent","span","Col","xs","sm","md","lg","Column","props","children","Container","memo","Row","overflow","clear","App","AppContainer","content","DndProvider","backend","HTML5Backend","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2def64cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/midi-3.bd9bac53.svg\";","export const ItemTypes = {\r\n  File: \"file\",\r\n};\r\n","import React, { useState, useCallback, useMemo } from \"react\";\r\nimport { useDrag, DragSourceMonitor, DragPreviewImage } from \"react-dnd\";\r\nimport { ItemTypes } from \"./ItemTypes\";\r\nimport midi1 from \"./assets/svg/midi-1.svg\";\r\nimport midi2 from \"./assets/svg/midi-2.svg\";\r\nimport midi3 from \"./assets/svg/midi-3.svg\";\r\nimport empty from \"./assets/svg/empty.svg\";\r\nimport \"./App.scss\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface FileProps {\r\n  name: string;\r\n  step: number;\r\n  onToggleForbidDrag?: () => void;\r\n}\r\n\r\nfunction FileImg({ name, step }: FileProps) {\r\n  const [forbidDrag, setForbidDrag] = useState(false);\r\n\r\n  function dragStart(event: any, url: string) {\r\n    // var img = new Image();\r\n    // img.src = midi1;\r\n\r\n    // event.dataTransfer.setDragImage(img, 100, 200);\r\n    event.dataTransfer.setData(\"DownloadURL\", url);\r\n    event.dataTransfer.effectAllowed = \"copyLink\";\r\n  }\r\n\r\n  const onToggleForbidDrag = useCallback(() => {\r\n    setForbidDrag(!forbidDrag);\r\n  }, [forbidDrag]);\r\n\r\n  const [{ opacity, cursor }, drag, preview] = useDrag({\r\n    item: { name, step, type: ItemTypes.File },\r\n    // canDrag: !forbidDrag,\r\n    end: (item: { name: string } | undefined, monitor: DragSourceMonitor) => {\r\n      //   const dropResult = monitor.didDrop();\r\n      const dropResult = monitor.getItem();\r\n      //   alert(dropResult);\r\n    },\r\n\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.4 : 1,\r\n      cursor: forbidDrag ? \"grabbing\" : \"default\",\r\n    }),\r\n  });\r\n\r\n  if (step === 1) {\r\n    return (\r\n      <ButtonGroup>\r\n        <DragPreviewImage connect={preview} src={midi1} />\r\n\r\n        <ButtonArea>\r\n          <Button onClick={onToggleForbidDrag}>반주 midi 파일 생성</Button>\r\n          <Drag\r\n            ref={drag}\r\n            style={{ opacity, cursor }}\r\n            draggable\r\n            onDragStart={(event) => {\r\n              if (forbidDrag) {\r\n                dragStart(\r\n                  event,\r\n                  \"text/plain:sample1.mid:https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\"\r\n                );\r\n              } else {\r\n                event.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            <Img>\r\n              {forbidDrag ? (\r\n                <img width=\"100\" height=\"200\" alt=\"drag out\" src={midi1} />\r\n              ) : (\r\n                <img width=\"100\" height=\"200\" alt=\"drag out\" src={empty} />\r\n              )}\r\n            </Img>\r\n            {name}\r\n          </Drag>\r\n        </ButtonArea>\r\n      </ButtonGroup>\r\n    );\r\n  } else if (step === 2) {\r\n    return (\r\n      <ButtonGroup>\r\n        <DragPreviewImage connect={preview} src={midi2} />\r\n\r\n        <ButtonArea>\r\n          <Button onClick={onToggleForbidDrag}>보이싱 midi 파일 생성</Button>\r\n          <Drag\r\n            ref={drag}\r\n            style={{ opacity, cursor }}\r\n            draggable\r\n            onDragStart={(event) => {\r\n              if (forbidDrag) {\r\n                dragStart(\r\n                  event,\r\n                  \"text/plain:sample2.mid:https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\"\r\n                );\r\n              } else {\r\n                event.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            <Img>\r\n              {forbidDrag ? (\r\n                <img width=\"100\" height=\"200\" alt=\"drag out\" src={midi2} />\r\n              ) : (\r\n                <img width=\"100\" height=\"200\" alt=\"drag out\" src={empty} />\r\n              )}\r\n            </Img>\r\n            {name}\r\n          </Drag>\r\n        </ButtonArea>\r\n      </ButtonGroup>\r\n    );\r\n  } else {\r\n    return (\r\n      <ButtonGroup>\r\n        <DragPreviewImage connect={preview} src={midi3} />\r\n\r\n        <ButtonArea>\r\n          <Button onClick={onToggleForbidDrag}>멜로디 midi 파일 생성</Button>\r\n          <Drag\r\n            ref={drag}\r\n            style={{ opacity, cursor }}\r\n            draggable\r\n            onDragStart={(event) => {\r\n              if (forbidDrag) {\r\n                dragStart(\r\n                  event,\r\n                  \"text/plain:sample3.mid:https://midi.s3.ap-northeast-2.amazonaws.com/sample.mid\"\r\n                );\r\n              } else {\r\n                event.preventDefault();\r\n              }\r\n            }}\r\n          >\r\n            <Img>\r\n              {forbidDrag ? (\r\n                <img width=\"100\" height=\"200\" alt=\"drag out\" src={midi3} />\r\n              ) : (\r\n                <img width=\"100\" height=\"200\" alt=\"drag out\" src={empty} />\r\n              )}\r\n            </Img>\r\n            {name}\r\n          </Drag>\r\n        </ButtonArea>\r\n      </ButtonGroup>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileImg;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin: 20px;\r\n`;\r\n\r\nconst ButtonArea = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Button = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 200px;\r\n  height: 60px;\r\n  border-radius: 20px;\r\n  background-color: rgb(107, 182, 184);\r\n  font-size: 16px;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  color: white;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: 15px;\r\n  box-shadow: 0 9px rgb(171, 169, 169);\r\n\r\n  &:hover {\r\n    background-color: rgb(43, 79, 81);\r\n  }\r\n\r\n  &:active {\r\n    background-color: rgb(43, 79, 81);\r\n    box-shadow: 0 5px rgb(36, 36, 36);\r\n    transform: translateY(4px);\r\n  }\r\n`;\r\n\r\nconst Drag = styled.div`\r\n  border: 1px dashed gray;\r\n  background-color: white;\r\n  padding: 0.5rem 1rem;\r\n  margin-right: 1.5rem;\r\n  margin: 1.5rem;\r\n  cursor: grabbing;\r\n  float: left;\r\n  width: 150px;\r\n  text-align: right;\r\n`;\r\n\r\nconst Img = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface colProps {\r\n  xs: number;\r\n  sm: number;\r\n  md: number;\r\n  lg: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst calcWidthPercent = (span: number) => {\r\n  if (!span) return;\r\n\r\n  const width = (span / 12) * 100;\r\n  return width;\r\n};\r\n\r\nconst BREAK_POINT_MOBILE = 768;\r\nconst BREAK_POINT_TABLET = 992;\r\nconst BREAK_POINT_PC = 1200;\r\n\r\nconst Col = styled.div`\r\n  float: left;\r\n  width: ${({ xs }: any) => (xs ? `${calcWidthPercent(xs)}%` : `100%`)};\r\n  min-width: 250px;\r\n  max-width: 300px;\r\n  padding: 1rem;\r\n\r\n  @media only screen and (min-width: ${BREAK_POINT_MOBILE}px) {\r\n    width: ${({ sm }: any) => sm && `${calcWidthPercent(sm)}%`};\r\n  }\r\n  @media only screen and (min-width: ${BREAK_POINT_TABLET}px) {\r\n    width: ${({ md }: any) => md && `${calcWidthPercent(md)}%`};\r\n  }\r\n  @media only screen and (min-width: ${BREAK_POINT_PC}px) {\r\n    width: ${({ lg }: any) => lg && `${calcWidthPercent(lg)}%`};\r\n  }\r\n`;\r\n\r\nconst Column = (props: colProps) => {\r\n  return <Col {...props}>{props.children}</Col>;\r\n};\r\n\r\nexport default Column;\r\n","import React, { memo } from \"react\";\r\nimport FileImg from \"./FileImg\";\r\nimport \"./App.scss\";\r\nimport Column from \"./Column\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = memo(function Container() {\r\n  return (\r\n    <Row>\r\n      <Column xs={12} sm={3} md={3} lg={3}>\r\n        <div style={{ overflow: \"hidden\", clear: \"both\" }}>\r\n          <FileImg name=\"반주\" step={1} />\r\n        </div>\r\n      </Column>\r\n\r\n      <Column xs={12} sm={3} md={3} lg={3}>\r\n        <div style={{ overflow: \"hidden\", clear: \"both\" }}>\r\n          <FileImg name=\"보이싱\" step={2} />\r\n        </div>\r\n      </Column>\r\n\r\n      <Column xs={12} sm={3} md={3} lg={3}>\r\n        <div style={{ overflow: \"hidden\", clear: \"both\" }}>\r\n          <FileImg name=\"멜로디\" step={3} />\r\n        </div>\r\n      </Column>\r\n    </Row>\r\n  );\r\n});\r\n\r\nexport default Container;\r\n\r\nconst Row = styled.div`\r\n  &::after {\r\n    content: \"\";\r\n    clear: both;\r\n    display: flex;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Container from \"./Container\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction App() {\r\n  return (\r\n    <AppContainer>\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n      <DndProvider backend={HTML5Backend}>\r\n        <Container />\r\n      </DndProvider>\r\n    </AppContainer>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst AppContainer = styled.div`\r\n  &,\r\n  & * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/empty.c41f6908.svg\";","module.exports = __webpack_public_path__ + \"static/media/midi-1.2830a009.svg\";","module.exports = __webpack_public_path__ + \"static/media/midi-2.a305106d.svg\";"],"sourceRoot":""}